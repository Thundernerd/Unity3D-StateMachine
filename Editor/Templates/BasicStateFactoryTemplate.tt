<#@ template language="C#" #>
<#@ include file="Includes.ttinclude"#>
using System;
using TNRD.StateManagement.Contracts;
using <#= Namespace #>.Contracts;

namespace <#= Namespace #>.Factories
{
    public class <#= StateFactoryName #> : <#= StateFactoryInterfaceName #>
    {
        private IStateMachine stateMachine;

        /// <inheritdoc />
        void IStateFactory.Initialize(IStateMachine stateMachine)
        {
            this.stateMachine = stateMachine;
        }

        /// <inheritdoc />
        IState IStateFactory.Instantiate(Enum stateId, Type stateType)
        {
            return (IState)Activator.CreateInstance(stateType, new object[] { stateMachine });
        }
    }
}
